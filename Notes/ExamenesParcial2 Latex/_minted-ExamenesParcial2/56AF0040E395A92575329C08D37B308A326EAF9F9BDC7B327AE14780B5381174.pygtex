\begin{Verbatim}[commandchars=\\\{\}]
\PYG{x}{class ACV\PYGZob{}}
\PYG{x}{  public:}
\PYG{x}{    //Alias de los diccionarios de Cliente y Vehiculo}
\PYG{x}{    typedef std::map\PYGZlt{}Cliente*,Reserva*\PYGZgt{} Clientes;}
\PYG{x}{    typedef std::map\PYGZlt{}Vehiculo*,Reserva*\PYGZgt{} Vehiculos;}
\PYG{x}{    //Alias de los diccionarios de las relaciones}
\PYG{x}{    typedef std::map\PYGZlt{}Cliente*,Vehiculos\PYGZgt{}CVs;}
\PYG{x}{    typedef std::map\PYGZlt{}Vehiculo*,Clientes\PYGZgt{}VCs;}

\PYG{x}{    //Método que asocian los objetos}
\PYG{x}{    void setACV(Cliente\PYGZam{},Vehiculo\PYGZam{},Reserva\PYGZam{})noexcept;}
\PYG{x}{    void setACV(Vehiculo\PYGZam{},Cliente\PYGZam{},Reserva\PYGZam{})noexcept;}

\PYG{x}{    //Métodos observadores}
\PYG{x}{    Clientes getClientes(Vehiculo\PYGZam{})const noexcept;}
\PYG{x}{    Vehiculos getVehiculos(Cliente\PYGZam{})const noexcept;}
\PYG{x}{  private:}
\PYG{x}{    CVs directa\PYGZus{};}
\PYG{x}{    VCs inversa\PYGZus{};}
\PYG{x}{\PYGZcb{};}

\PYG{x}{Ahora vamos a implementar los métodos (no nos lo pide el enunciado, pero vamos a hacerlo para repasar)}
\PYG{x}{\PYGZbs{}begin\PYGZob{}minted\PYGZcb{}[breaklines]\PYGZob{}C++\PYGZcb{}}

\end{Verbatim}
